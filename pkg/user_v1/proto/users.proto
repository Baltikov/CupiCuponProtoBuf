syntax = "proto3";

// Используем snake_case для описания полей, для названий message и service используем CamelCase
// Описываем структуры message для ответов и запросов
// Описываем service, методы CRUD
////
package users_v1;
//  как генерируемый код должен быть организован для использования в Go. Важно для импорта пакетов
// логическое назначение пакета для Go-кода (как его импортировать, к какому пакету он относится).
option go_package = "github.com/Baltikov/CupiCuponProtoBuf/grpc/pkg/user_v1/generate;user_v1";
// импорта
// userV1 "github.com/Baltikov/CupiCuponProtoBuf/grpc/pkg/user_v1/generate"

message InfoUser {
  string name = 1;
  string last_name = 2;
  int64 age = 3;
  string email = 4;
  string phone_number = 5;
  string id = 6;
}

message CreateUserRequest {
  InfoUser user = 1;
}

message CreateUserResponse {
  int64 id = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  InfoUser user = 1;
}
message DeleteUserRequest {
  int64 id = 1;
}
message DeleteUserResponse {
  int64 id = 1;
}

service User {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

}
